final class Building{{int a=switch(null){case Semantic.RadarDistance p->{program.instruct(new Instruction.RadarDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyDistance p->{program.instruct(new Instruction.RadarEnemyDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyDistance p->{program.instruct(new Instruction.RadarEnemyAllyDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyPlayerDistance p->{program.instruct(new Instruction.RadarEnemyAllyPlayerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyAttackerDistance p->{program.instruct(new Instruction.RadarEnemyAllyAttackerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyFlyingDistance p->{program.instruct(new Instruction.RadarEnemyAllyFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyBossDistance p->{program.instruct(new Instruction.RadarEnemyAllyBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyGroundDistance p->{program.instruct(new Instruction.RadarEnemyAllyGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerDistance p->{program.instruct(new Instruction.RadarEnemyPlayerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerAttackerDistance p->{program.instruct(new Instruction.RadarEnemyPlayerAttackerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerFlyingDistance p->{program.instruct(new Instruction.RadarEnemyPlayerFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerBossDistance p->{program.instruct(new Instruction.RadarEnemyPlayerBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerGroundDistance p->{program.instruct(new Instruction.RadarEnemyPlayerGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerDistance p->{program.instruct(new Instruction.RadarEnemyAttackerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerFlyingDistance p->{program.instruct(new Instruction.RadarEnemyAttackerFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerBossDistance p->{program.instruct(new Instruction.RadarEnemyAttackerBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerGroundDistance p->{program.instruct(new Instruction.RadarEnemyAttackerGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingDistance p->{program.instruct(new Instruction.RadarEnemyFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingBossDistance p->{program.instruct(new Instruction.RadarEnemyFlyingBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingGroundDistance p->{program.instruct(new Instruction.RadarEnemyFlyingGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossDistance p->{program.instruct(new Instruction.RadarEnemyBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossGroundDistance p->{program.instruct(new Instruction.RadarEnemyBossGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyGroundDistance p->{program.instruct(new Instruction.RadarEnemyGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyDistance p->{program.instruct(new Instruction.RadarAllyDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerDistance p->{program.instruct(new Instruction.RadarAllyPlayerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerAttackerDistance p->{program.instruct(new Instruction.RadarAllyPlayerAttackerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerFlyingDistance p->{program.instruct(new Instruction.RadarAllyPlayerFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerBossDistance p->{program.instruct(new Instruction.RadarAllyPlayerBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerGroundDistance p->{program.instruct(new Instruction.RadarAllyPlayerGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerDistance p->{program.instruct(new Instruction.RadarAllyAttackerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerFlyingDistance p->{program.instruct(new Instruction.RadarAllyAttackerFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerBossDistance p->{program.instruct(new Instruction.RadarAllyAttackerBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerGroundDistance p->{program.instruct(new Instruction.RadarAllyAttackerGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingDistance p->{program.instruct(new Instruction.RadarAllyFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingBossDistance p->{program.instruct(new Instruction.RadarAllyFlyingBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingGroundDistance p->{program.instruct(new Instruction.RadarAllyFlyingGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossDistance p->{program.instruct(new Instruction.RadarAllyBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossGroundDistance p->{program.instruct(new Instruction.RadarAllyBossGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyGroundDistance p->{program.instruct(new Instruction.RadarAllyGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerDistance p->{program.instruct(new Instruction.RadarPlayerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerDistance p->{program.instruct(new Instruction.RadarPlayerAttackerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerFlyingDistance p->{program.instruct(new Instruction.RadarPlayerAttackerFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerBossDistance p->{program.instruct(new Instruction.RadarPlayerAttackerBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerGroundDistance p->{program.instruct(new Instruction.RadarPlayerAttackerGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingDistance p->{program.instruct(new Instruction.RadarPlayerFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingBossDistance p->{program.instruct(new Instruction.RadarPlayerFlyingBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingGroundDistance p->{program.instruct(new Instruction.RadarPlayerFlyingGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossDistance p->{program.instruct(new Instruction.RadarPlayerBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossGroundDistance p->{program.instruct(new Instruction.RadarPlayerBossGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerGroundDistance p->{program.instruct(new Instruction.RadarPlayerGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerDistance p->{program.instruct(new Instruction.RadarAttackerDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingDistance p->{program.instruct(new Instruction.RadarAttackerFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingBossDistance p->{program.instruct(new Instruction.RadarAttackerFlyingBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingGroundDistance p->{program.instruct(new Instruction.RadarAttackerFlyingGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossDistance p->{program.instruct(new Instruction.RadarAttackerBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossGroundDistance p->{program.instruct(new Instruction.RadarAttackerBossGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerGroundDistance p->{program.instruct(new Instruction.RadarAttackerGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingDistance p->{program.instruct(new Instruction.RadarFlyingDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossDistance p->{program.instruct(new Instruction.RadarFlyingBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossGroundDistance p->{program.instruct(new Instruction.RadarFlyingBossGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingGroundDistance p->{program.instruct(new Instruction.RadarFlyingGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossDistance p->{program.instruct(new Instruction.RadarBossDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossGroundDistance p->{program.instruct(new Instruction.RadarBossGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarGroundDistance p->{program.instruct(new Instruction.RadarGroundDistance(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarHealth p->{program.instruct(new Instruction.RadarHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyHealth p->{program.instruct(new Instruction.RadarEnemyHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyHealth p->{program.instruct(new Instruction.RadarEnemyAllyHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyPlayerHealth p->{program.instruct(new Instruction.RadarEnemyAllyPlayerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyAttackerHealth p->{program.instruct(new Instruction.RadarEnemyAllyAttackerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyFlyingHealth p->{program.instruct(new Instruction.RadarEnemyAllyFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyBossHealth p->{program.instruct(new Instruction.RadarEnemyAllyBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyGroundHealth p->{program.instruct(new Instruction.RadarEnemyAllyGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerHealth p->{program.instruct(new Instruction.RadarEnemyPlayerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerAttackerHealth p->{program.instruct(new Instruction.RadarEnemyPlayerAttackerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerFlyingHealth p->{program.instruct(new Instruction.RadarEnemyPlayerFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerBossHealth p->{program.instruct(new Instruction.RadarEnemyPlayerBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerGroundHealth p->{program.instruct(new Instruction.RadarEnemyPlayerGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerHealth p->{program.instruct(new Instruction.RadarEnemyAttackerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerFlyingHealth p->{program.instruct(new Instruction.RadarEnemyAttackerFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerBossHealth p->{program.instruct(new Instruction.RadarEnemyAttackerBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerGroundHealth p->{program.instruct(new Instruction.RadarEnemyAttackerGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingHealth p->{program.instruct(new Instruction.RadarEnemyFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingBossHealth p->{program.instruct(new Instruction.RadarEnemyFlyingBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingGroundHealth p->{program.instruct(new Instruction.RadarEnemyFlyingGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossHealth p->{program.instruct(new Instruction.RadarEnemyBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossGroundHealth p->{program.instruct(new Instruction.RadarEnemyBossGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyGroundHealth p->{program.instruct(new Instruction.RadarEnemyGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyHealth p->{program.instruct(new Instruction.RadarAllyHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerHealth p->{program.instruct(new Instruction.RadarAllyPlayerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerAttackerHealth p->{program.instruct(new Instruction.RadarAllyPlayerAttackerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerFlyingHealth p->{program.instruct(new Instruction.RadarAllyPlayerFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerBossHealth p->{program.instruct(new Instruction.RadarAllyPlayerBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerGroundHealth p->{program.instruct(new Instruction.RadarAllyPlayerGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerHealth p->{program.instruct(new Instruction.RadarAllyAttackerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerFlyingHealth p->{program.instruct(new Instruction.RadarAllyAttackerFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerBossHealth p->{program.instruct(new Instruction.RadarAllyAttackerBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerGroundHealth p->{program.instruct(new Instruction.RadarAllyAttackerGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingHealth p->{program.instruct(new Instruction.RadarAllyFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingBossHealth p->{program.instruct(new Instruction.RadarAllyFlyingBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingGroundHealth p->{program.instruct(new Instruction.RadarAllyFlyingGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossHealth p->{program.instruct(new Instruction.RadarAllyBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossGroundHealth p->{program.instruct(new Instruction.RadarAllyBossGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyGroundHealth p->{program.instruct(new Instruction.RadarAllyGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerHealth p->{program.instruct(new Instruction.RadarPlayerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerHealth p->{program.instruct(new Instruction.RadarPlayerAttackerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerFlyingHealth p->{program.instruct(new Instruction.RadarPlayerAttackerFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerBossHealth p->{program.instruct(new Instruction.RadarPlayerAttackerBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerGroundHealth p->{program.instruct(new Instruction.RadarPlayerAttackerGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingHealth p->{program.instruct(new Instruction.RadarPlayerFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingBossHealth p->{program.instruct(new Instruction.RadarPlayerFlyingBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingGroundHealth p->{program.instruct(new Instruction.RadarPlayerFlyingGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossHealth p->{program.instruct(new Instruction.RadarPlayerBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossGroundHealth p->{program.instruct(new Instruction.RadarPlayerBossGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerGroundHealth p->{program.instruct(new Instruction.RadarPlayerGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerHealth p->{program.instruct(new Instruction.RadarAttackerHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingHealth p->{program.instruct(new Instruction.RadarAttackerFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingBossHealth p->{program.instruct(new Instruction.RadarAttackerFlyingBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingGroundHealth p->{program.instruct(new Instruction.RadarAttackerFlyingGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossHealth p->{program.instruct(new Instruction.RadarAttackerBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossGroundHealth p->{program.instruct(new Instruction.RadarAttackerBossGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerGroundHealth p->{program.instruct(new Instruction.RadarAttackerGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingHealth p->{program.instruct(new Instruction.RadarFlyingHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossHealth p->{program.instruct(new Instruction.RadarFlyingBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossGroundHealth p->{program.instruct(new Instruction.RadarFlyingBossGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingGroundHealth p->{program.instruct(new Instruction.RadarFlyingGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossHealth p->{program.instruct(new Instruction.RadarBossHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossGroundHealth p->{program.instruct(new Instruction.RadarBossGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarGroundHealth p->{program.instruct(new Instruction.RadarGroundHealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarShield p->{program.instruct(new Instruction.RadarShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyShield p->{program.instruct(new Instruction.RadarEnemyShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyShield p->{program.instruct(new Instruction.RadarEnemyAllyShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyPlayerShield p->{program.instruct(new Instruction.RadarEnemyAllyPlayerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyAttackerShield p->{program.instruct(new Instruction.RadarEnemyAllyAttackerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyFlyingShield p->{program.instruct(new Instruction.RadarEnemyAllyFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyBossShield p->{program.instruct(new Instruction.RadarEnemyAllyBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyGroundShield p->{program.instruct(new Instruction.RadarEnemyAllyGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerShield p->{program.instruct(new Instruction.RadarEnemyPlayerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerAttackerShield p->{program.instruct(new Instruction.RadarEnemyPlayerAttackerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerFlyingShield p->{program.instruct(new Instruction.RadarEnemyPlayerFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerBossShield p->{program.instruct(new Instruction.RadarEnemyPlayerBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerGroundShield p->{program.instruct(new Instruction.RadarEnemyPlayerGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerShield p->{program.instruct(new Instruction.RadarEnemyAttackerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerFlyingShield p->{program.instruct(new Instruction.RadarEnemyAttackerFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerBossShield p->{program.instruct(new Instruction.RadarEnemyAttackerBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerGroundShield p->{program.instruct(new Instruction.RadarEnemyAttackerGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingShield p->{program.instruct(new Instruction.RadarEnemyFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingBossShield p->{program.instruct(new Instruction.RadarEnemyFlyingBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingGroundShield p->{program.instruct(new Instruction.RadarEnemyFlyingGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossShield p->{program.instruct(new Instruction.RadarEnemyBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossGroundShield p->{program.instruct(new Instruction.RadarEnemyBossGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyGroundShield p->{program.instruct(new Instruction.RadarEnemyGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyShield p->{program.instruct(new Instruction.RadarAllyShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerShield p->{program.instruct(new Instruction.RadarAllyPlayerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerAttackerShield p->{program.instruct(new Instruction.RadarAllyPlayerAttackerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerFlyingShield p->{program.instruct(new Instruction.RadarAllyPlayerFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerBossShield p->{program.instruct(new Instruction.RadarAllyPlayerBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerGroundShield p->{program.instruct(new Instruction.RadarAllyPlayerGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerShield p->{program.instruct(new Instruction.RadarAllyAttackerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerFlyingShield p->{program.instruct(new Instruction.RadarAllyAttackerFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerBossShield p->{program.instruct(new Instruction.RadarAllyAttackerBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerGroundShield p->{program.instruct(new Instruction.RadarAllyAttackerGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingShield p->{program.instruct(new Instruction.RadarAllyFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingBossShield p->{program.instruct(new Instruction.RadarAllyFlyingBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingGroundShield p->{program.instruct(new Instruction.RadarAllyFlyingGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossShield p->{program.instruct(new Instruction.RadarAllyBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossGroundShield p->{program.instruct(new Instruction.RadarAllyBossGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyGroundShield p->{program.instruct(new Instruction.RadarAllyGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerShield p->{program.instruct(new Instruction.RadarPlayerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerShield p->{program.instruct(new Instruction.RadarPlayerAttackerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerFlyingShield p->{program.instruct(new Instruction.RadarPlayerAttackerFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerBossShield p->{program.instruct(new Instruction.RadarPlayerAttackerBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerGroundShield p->{program.instruct(new Instruction.RadarPlayerAttackerGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingShield p->{program.instruct(new Instruction.RadarPlayerFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingBossShield p->{program.instruct(new Instruction.RadarPlayerFlyingBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingGroundShield p->{program.instruct(new Instruction.RadarPlayerFlyingGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossShield p->{program.instruct(new Instruction.RadarPlayerBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossGroundShield p->{program.instruct(new Instruction.RadarPlayerBossGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerGroundShield p->{program.instruct(new Instruction.RadarPlayerGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerShield p->{program.instruct(new Instruction.RadarAttackerShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingShield p->{program.instruct(new Instruction.RadarAttackerFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingBossShield p->{program.instruct(new Instruction.RadarAttackerFlyingBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingGroundShield p->{program.instruct(new Instruction.RadarAttackerFlyingGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossShield p->{program.instruct(new Instruction.RadarAttackerBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossGroundShield p->{program.instruct(new Instruction.RadarAttackerBossGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerGroundShield p->{program.instruct(new Instruction.RadarAttackerGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingShield p->{program.instruct(new Instruction.RadarFlyingShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossShield p->{program.instruct(new Instruction.RadarFlyingBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossGroundShield p->{program.instruct(new Instruction.RadarFlyingBossGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingGroundShield p->{program.instruct(new Instruction.RadarFlyingGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossShield p->{program.instruct(new Instruction.RadarBossShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossGroundShield p->{program.instruct(new Instruction.RadarBossGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarGroundShield p->{program.instruct(new Instruction.RadarGroundShield(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarArmor p->{program.instruct(new Instruction.RadarArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyArmor p->{program.instruct(new Instruction.RadarEnemyArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyArmor p->{program.instruct(new Instruction.RadarEnemyAllyArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyPlayerArmor p->{program.instruct(new Instruction.RadarEnemyAllyPlayerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyAttackerArmor p->{program.instruct(new Instruction.RadarEnemyAllyAttackerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyFlyingArmor p->{program.instruct(new Instruction.RadarEnemyAllyFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyBossArmor p->{program.instruct(new Instruction.RadarEnemyAllyBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyGroundArmor p->{program.instruct(new Instruction.RadarEnemyAllyGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerArmor p->{program.instruct(new Instruction.RadarEnemyPlayerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerAttackerArmor p->{program.instruct(new Instruction.RadarEnemyPlayerAttackerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerFlyingArmor p->{program.instruct(new Instruction.RadarEnemyPlayerFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerBossArmor p->{program.instruct(new Instruction.RadarEnemyPlayerBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerGroundArmor p->{program.instruct(new Instruction.RadarEnemyPlayerGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerArmor p->{program.instruct(new Instruction.RadarEnemyAttackerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerFlyingArmor p->{program.instruct(new Instruction.RadarEnemyAttackerFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerBossArmor p->{program.instruct(new Instruction.RadarEnemyAttackerBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerGroundArmor p->{program.instruct(new Instruction.RadarEnemyAttackerGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingArmor p->{program.instruct(new Instruction.RadarEnemyFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingBossArmor p->{program.instruct(new Instruction.RadarEnemyFlyingBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingGroundArmor p->{program.instruct(new Instruction.RadarEnemyFlyingGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossArmor p->{program.instruct(new Instruction.RadarEnemyBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossGroundArmor p->{program.instruct(new Instruction.RadarEnemyBossGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyGroundArmor p->{program.instruct(new Instruction.RadarEnemyGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyArmor p->{program.instruct(new Instruction.RadarAllyArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerArmor p->{program.instruct(new Instruction.RadarAllyPlayerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerAttackerArmor p->{program.instruct(new Instruction.RadarAllyPlayerAttackerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerFlyingArmor p->{program.instruct(new Instruction.RadarAllyPlayerFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerBossArmor p->{program.instruct(new Instruction.RadarAllyPlayerBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerGroundArmor p->{program.instruct(new Instruction.RadarAllyPlayerGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerArmor p->{program.instruct(new Instruction.RadarAllyAttackerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerFlyingArmor p->{program.instruct(new Instruction.RadarAllyAttackerFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerBossArmor p->{program.instruct(new Instruction.RadarAllyAttackerBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerGroundArmor p->{program.instruct(new Instruction.RadarAllyAttackerGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingArmor p->{program.instruct(new Instruction.RadarAllyFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingBossArmor p->{program.instruct(new Instruction.RadarAllyFlyingBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingGroundArmor p->{program.instruct(new Instruction.RadarAllyFlyingGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossArmor p->{program.instruct(new Instruction.RadarAllyBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossGroundArmor p->{program.instruct(new Instruction.RadarAllyBossGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyGroundArmor p->{program.instruct(new Instruction.RadarAllyGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerArmor p->{program.instruct(new Instruction.RadarPlayerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerArmor p->{program.instruct(new Instruction.RadarPlayerAttackerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerFlyingArmor p->{program.instruct(new Instruction.RadarPlayerAttackerFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerBossArmor p->{program.instruct(new Instruction.RadarPlayerAttackerBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerGroundArmor p->{program.instruct(new Instruction.RadarPlayerAttackerGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingArmor p->{program.instruct(new Instruction.RadarPlayerFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingBossArmor p->{program.instruct(new Instruction.RadarPlayerFlyingBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingGroundArmor p->{program.instruct(new Instruction.RadarPlayerFlyingGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossArmor p->{program.instruct(new Instruction.RadarPlayerBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossGroundArmor p->{program.instruct(new Instruction.RadarPlayerBossGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerGroundArmor p->{program.instruct(new Instruction.RadarPlayerGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerArmor p->{program.instruct(new Instruction.RadarAttackerArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingArmor p->{program.instruct(new Instruction.RadarAttackerFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingBossArmor p->{program.instruct(new Instruction.RadarAttackerFlyingBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingGroundArmor p->{program.instruct(new Instruction.RadarAttackerFlyingGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossArmor p->{program.instruct(new Instruction.RadarAttackerBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossGroundArmor p->{program.instruct(new Instruction.RadarAttackerBossGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerGroundArmor p->{program.instruct(new Instruction.RadarAttackerGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingArmor p->{program.instruct(new Instruction.RadarFlyingArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossArmor p->{program.instruct(new Instruction.RadarFlyingBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossGroundArmor p->{program.instruct(new Instruction.RadarFlyingBossGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingGroundArmor p->{program.instruct(new Instruction.RadarFlyingGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossArmor p->{program.instruct(new Instruction.RadarBossArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossGroundArmor p->{program.instruct(new Instruction.RadarBossGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarGroundArmor p->{program.instruct(new Instruction.RadarGroundArmor(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarMaxhealth p->{program.instruct(new Instruction.RadarMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyMaxhealth p->{program.instruct(new Instruction.RadarEnemyMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyMaxhealth p->{program.instruct(new Instruction.RadarEnemyAllyMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyPlayerMaxhealth p->{program.instruct(new Instruction.RadarEnemyAllyPlayerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyAttackerMaxhealth p->{program.instruct(new Instruction.RadarEnemyAllyAttackerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyFlyingMaxhealth p->{program.instruct(new Instruction.RadarEnemyAllyFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyBossMaxhealth p->{program.instruct(new Instruction.RadarEnemyAllyBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAllyGroundMaxhealth p->{program.instruct(new Instruction.RadarEnemyAllyGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerMaxhealth p->{program.instruct(new Instruction.RadarEnemyPlayerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerAttackerMaxhealth p->{program.instruct(new Instruction.RadarEnemyPlayerAttackerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerFlyingMaxhealth p->{program.instruct(new Instruction.RadarEnemyPlayerFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerBossMaxhealth p->{program.instruct(new Instruction.RadarEnemyPlayerBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyPlayerGroundMaxhealth p->{program.instruct(new Instruction.RadarEnemyPlayerGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerMaxhealth p->{program.instruct(new Instruction.RadarEnemyAttackerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerFlyingMaxhealth p->{program.instruct(new Instruction.RadarEnemyAttackerFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerBossMaxhealth p->{program.instruct(new Instruction.RadarEnemyAttackerBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyAttackerGroundMaxhealth p->{program.instruct(new Instruction.RadarEnemyAttackerGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingMaxhealth p->{program.instruct(new Instruction.RadarEnemyFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingBossMaxhealth p->{program.instruct(new Instruction.RadarEnemyFlyingBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyFlyingGroundMaxhealth p->{program.instruct(new Instruction.RadarEnemyFlyingGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossMaxhealth p->{program.instruct(new Instruction.RadarEnemyBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyBossGroundMaxhealth p->{program.instruct(new Instruction.RadarEnemyBossGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarEnemyGroundMaxhealth p->{program.instruct(new Instruction.RadarEnemyGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyMaxhealth p->{program.instruct(new Instruction.RadarAllyMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerMaxhealth p->{program.instruct(new Instruction.RadarAllyPlayerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerAttackerMaxhealth p->{program.instruct(new Instruction.RadarAllyPlayerAttackerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerFlyingMaxhealth p->{program.instruct(new Instruction.RadarAllyPlayerFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerBossMaxhealth p->{program.instruct(new Instruction.RadarAllyPlayerBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyPlayerGroundMaxhealth p->{program.instruct(new Instruction.RadarAllyPlayerGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerMaxhealth p->{program.instruct(new Instruction.RadarAllyAttackerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerFlyingMaxhealth p->{program.instruct(new Instruction.RadarAllyAttackerFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerBossMaxhealth p->{program.instruct(new Instruction.RadarAllyAttackerBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyAttackerGroundMaxhealth p->{program.instruct(new Instruction.RadarAllyAttackerGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingMaxhealth p->{program.instruct(new Instruction.RadarAllyFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingBossMaxhealth p->{program.instruct(new Instruction.RadarAllyFlyingBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyFlyingGroundMaxhealth p->{program.instruct(new Instruction.RadarAllyFlyingGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossMaxhealth p->{program.instruct(new Instruction.RadarAllyBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyBossGroundMaxhealth p->{program.instruct(new Instruction.RadarAllyBossGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAllyGroundMaxhealth p->{program.instruct(new Instruction.RadarAllyGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerMaxhealth p->{program.instruct(new Instruction.RadarPlayerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerMaxhealth p->{program.instruct(new Instruction.RadarPlayerAttackerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerFlyingMaxhealth p->{program.instruct(new Instruction.RadarPlayerAttackerFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerBossMaxhealth p->{program.instruct(new Instruction.RadarPlayerAttackerBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerAttackerGroundMaxhealth p->{program.instruct(new Instruction.RadarPlayerAttackerGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingMaxhealth p->{program.instruct(new Instruction.RadarPlayerFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingBossMaxhealth p->{program.instruct(new Instruction.RadarPlayerFlyingBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerFlyingGroundMaxhealth p->{program.instruct(new Instruction.RadarPlayerFlyingGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossMaxhealth p->{program.instruct(new Instruction.RadarPlayerBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerBossGroundMaxhealth p->{program.instruct(new Instruction.RadarPlayerBossGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarPlayerGroundMaxhealth p->{program.instruct(new Instruction.RadarPlayerGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerMaxhealth p->{program.instruct(new Instruction.RadarAttackerMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingMaxhealth p->{program.instruct(new Instruction.RadarAttackerFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingBossMaxhealth p->{program.instruct(new Instruction.RadarAttackerFlyingBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerFlyingGroundMaxhealth p->{program.instruct(new Instruction.RadarAttackerFlyingGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossMaxhealth p->{program.instruct(new Instruction.RadarAttackerBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerBossGroundMaxhealth p->{program.instruct(new Instruction.RadarAttackerBossGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarAttackerGroundMaxhealth p->{program.instruct(new Instruction.RadarAttackerGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingMaxhealth p->{program.instruct(new Instruction.RadarFlyingMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossMaxhealth p->{program.instruct(new Instruction.RadarFlyingBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingBossGroundMaxhealth p->{program.instruct(new Instruction.RadarFlyingBossGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarFlyingGroundMaxhealth p->{program.instruct(new Instruction.RadarFlyingGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossMaxhealth p->{program.instruct(new Instruction.RadarBossMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarBossGroundMaxhealth p->{program.instruct(new Instruction.RadarBossGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}case Semantic.RadarGroundMaxhealth p->{program.instruct(new Instruction.RadarGroundMaxhealth(build_argument(e.arguments(),0),build_argument(e.arguments(),1),build_argument(e.arguments(),2)));yield Register.null_();}default->{}};}}