# Tests built-in operation instructions that are not covered by expressions.

entrypoint {
  var a;
  var b;
  var result;
  mlog::op_max(result, a, b);           # op       max result a b
  mlog::op_min(result, a, b);           # op       min result a b
  mlog::op_angle(result, a, b);         # op     angle result a b
  mlog::op_angleDiff(result, a, b);     # op angleDiff result a b
  mlog::op_len(result, a, b);           # op       len result a b
  mlog::op_noise(result, a, b);         # op     noise result a b
  mlog::op_abs(result, a);              # op       abs result a
  mlog::op_log(result, a);              # op       log result a
  mlog::op_log10(result, a);            # op     log10 result a
  mlog::op_floor(result, a);            # op     floor result a
  mlog::op_ceil(result, a);             # op      ceil result a
  mlog::op_sqrt(result, a);             # op      sqrt result a
  mlog::op_rand(result, a);             # op      rand result a
  mlog::op_sin(result, a);              # op       sin result a
  mlog::op_cos(result, a);              # op       cos result a
  mlog::op_tan(result, a);              # op       tan result a
  mlog::op_asin(result, a);             # op      asin result a
  mlog::op_acos(result, a);             # op      acos result a
  mlog::op_atan(result, a);             # op      atan result a
}
