 # Tests binding and controlling units.

entrypoint {
  var type;
  var x_coordinate;
  var y_coordinate;
  var radius;
  var enabled;
  var shoot;
  var unit;
  var to;
  var amount;
  var from;
  var item;
  var take_units;
  var value;
  var block;
  var rotation;
  var configuration;
  var building;
  var floor;
  var result;
  mlog::ubind(type);                                                                # ubind            type
  mlog::ucontrol_idle();                                                            # ucontrol         idle
  mlog::ucontrol_stop();                                                            # ucontrol         stop
  mlog::ucontrol_move(x_coordinate, y_coordinate);                                  # ucontrol         move x_coordinate y_coordinate
  mlog::ucontrol_approach(x_coordinate, y_coordinate, radius);                      # ucontrol     approach x_coordinate y_coordinate radius
  mlog::ucontrol_pathfind(x_coordinate, y_coordinate);                              # ucontrol     pathfind x_coordinate y_coordinate
  mlog::ucontrol_autoPathfind();                                                    # ucontrol autoPathfind
  mlog::ucontrol_boost(enabled);                                                    # ucontrol        boost      enabled
  mlog::ucontrol_target(x_coordinate, y_coordinate, shoot);                         # ucontrol       target x_coordinate y_coordinate  shoot
  mlog::ucontrol_targetp(unit, shoot);                                              # ucontrol      targetp         unit        shoot
  mlog::ucontrol_itemDrop(to, amount);                                              # ucontrol     itemDrop           to       amount
  mlog::ucontrol_itemTake(from, item, amount);                                      # ucontrol     itemTake         from         item amount
  mlog::ucontrol_payDrop();                                                         # ucontrol      payDrop
  mlog::ucontrol_payTake(take_units);                                               # ucontrol      payTake   take_units
  mlog::ucontrol_payEnter();                                                        # ucontrol     payEnter
  mlog::ucontrol_mine(x_coordinate, y_coordinate);                                  # ucontrol         mine x_coordinate y_coordinate
  mlog::ucontrol_flag(value);                                                       # ucontrol         flag        value
  mlog::ucontrol_build(x_coordinate, y_coordinate, block, rotation, configuration); # ucontrol        build x_coordinate y_coordinate  block rotation configuration
  mlog::ucontrol_getBlock(x_coordinate, y_coordinate, type, building, floor);       # ucontrol     getBlock x_coordinate y_coordinate   type building         floor
  mlog::ucontrol_within(x_coordinate, y_coordinate, radius, result);                # ucontrol       within x_coordinate y_coordinate radius   result
  mlog::ucontrol_unbind();                                                          # ucontrol       unbind
}
